{# This extends the main control panel layout from Craft CMS #}
{% extends "_layouts/cp.twig" %}

{# Set the page title for the CP interface #}
{% set title = "Broken Links"|t('broken-links') %}

{% block content %}

{# Container for the scan button and progress indicator #}
<div class="container">
    <button id="run-crawl" class="btn">Scan Links</button>
    <span id="loading">
        <svg id="loading-spinner" class="spinner hidden" width="20" height="20" viewBox="0 0 50 50">
            <circle cx="25" cy="25" r="20" stroke="#DC2625" stroke-width="5" fill="none" />
        </svg>
        <span id="loading-text"></span>
    </span>
</div>

{# Placeholder for displaying results dynamically #}
<div id="results">
    <p>No broken links detected yet. Click "Scan Links" to start.</p>
</div>

<style>
    /* Consistent Craft CMS styling */
    body {
        font-family: 'Mulish', sans-serif;
        line-height: 1.5;
        color: #333;
        background-color: #E4ECF6;
    }

    .container {
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .btn {
        background-color: #DC2625;
        color: white;
        padding: 10px 15px;
        border: none;
        cursor: pointer;
        border-radius: 4px;
        font-size: 14px;
        transition: background-color 0.2s ease-in-out;
    }

    .btn:hover {
        background-color: #b91c1c;
    }

    .action-link {
        color: #006eff;
        text-decoration: none;
    }

    .action-link:hover {
        text-decoration: underline;
    }

    /* Loading spinner styles */
    .spinner {
        animation: spin 1s linear infinite;
    }

    .hidden {
        display: none;
    }

    @keyframes spin {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

    thead {
        background-color: #f3f4f6;
    }

    th {
        text-align: left;
        padding: 10px;
        font-weight: bold;
    }

    td {
        padding: 10px;
        border-bottom: 1px solid #ddd;
    }

    tr:hover {
        background-color: #f9fafb;
    }

</style>

<script>
document.getElementById('run-crawl').addEventListener('click', function () {
    const loadingText = document.getElementById('loading-text');
    const spinner = document.getElementById('loading-spinner');
    const resultsDiv = document.getElementById('results');

    // Show loading feedback
    loadingText.textContent = 'Scanning... Please wait.';
    spinner.classList.remove('hidden');
    resultsDiv.innerHTML = '<p>ðŸš€ Crawl started! You can monitor progress in Utilities > Queue Manager.</p>';

    fetch('/brokenlinks/run-crawl')
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            console.log('Broken links:', data);

            // Clear loading feedback
            loadingText.textContent = '';
            spinner.classList.add('hidden');

            resultsDiv.innerHTML = '';


            // âœ… If there's no `data.data`, show a message instead of crashing
            if (!data.data || !Array.isArray(data.data)) {
                resultsDiv.innerHTML = `<p>${data.message || 'Crawl started, but no data available yet.'}</p>`;
                return;
            }


            if (data.data.length === 0) {
                resultsDiv.innerHTML = '<p>No broken links found.</p>';
            } else {
                const table = document.createElement('table');
                table.innerHTML = `
                    <thead>
                        <tr>
                            <th>Broken Link</th>
                            <th>Link Text</th>
                            <th>Field</th>
                            <th>Page URL</th>
                            <th>Entry</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${data.data
                            .map(link => `
                            <tr>
                                <td>
                                    <a href="${link.url}" target="_blank" class="action-link">${link.url}</a>
                                </td>
                                <td>${link.linkText || 'N/A'}</td>
                                <td>${link.field || 'N/A'}</td>
                                <td>
                                    <a href="${link.pageUrl}" target="_blank" class="action-link">
                                        ${link.pageUrl.replace('${siteUrl}', '') || '/'}
                                    </a>
                                </td>
                                <td>
                                    ${
                                        link.entryUrl
                                            ? `<a href="${link.entryUrl}" target="_blank" class="action-link">${link.entryTitle || 'N/A'}</a>`
                                            : 'N/A'
                                    }
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>
                `;
                resultsDiv.appendChild(table);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            resultsDiv.innerHTML = `<p>Error: ${error.message}</p>`;
            loadingText.textContent = ''; // Clear loading text
            spinner.classList.add('hidden');
        });
});
</script>

{% endblock %}
